{"version":3,"sources":["components/Schedule.js","App.js","reportWebVitals.js","index.js"],"names":["ScheduleItem","props","changeColor","e","color","green","bikeCounter","data","currentData","stateColor","state","setState","className","style","backgroundColor","this","borderColor","hour","type","onClick","React","Component","Schedule","add","value","scheduleList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEMA,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,YAAc,SAAAC,GACV,IAAIC,EAAQ,QACRC,EAAQ,UACRC,EAAc,EAAKL,MAAMM,KAAKC,YAC9BC,EAAa,EAAKC,MAAMN,MAEV,UAAfK,EACqB,IAAhBH,EACAF,EAAQ,MACFE,EAAc,IACpBF,EAAQC,EACR,EAAKJ,MAAMC,YAAYC,GAAI,IAEzBM,IAAeJ,IACD,IAAhBC,GAEMA,EAAc,GAAKA,EAAc,KADvCF,EAAQ,SAIZ,EAAKH,MAAMC,YAAYC,EAAG,IAEN,IAAhBG,EACAF,EAAQ,QACFE,EAAc,IACpBF,EAAQC,EACR,EAAKJ,MAAMC,YAAYC,GAAI,IAInC,EAAKQ,SAAS,CACVP,MAAOA,KAnCX,EAAKM,MAAQ,CACTN,MAAO,SAJG,E,0CA4ClB,WACI,OACI,sBACAQ,UAAU,iBACVC,MAAS,CAACC,gBAAiBC,KAAKL,MAAMN,MAC5BY,YAAaD,KAAKL,MAAMN,OAHlC,UAMI,oBAAIQ,UAAU,uBAAd,SACKG,KAAKd,MAAMM,KAAKU,OAErB,wBAAQC,KAAK,SAASC,QAASJ,KAAKb,YAApC,yB,GAzDWkB,IAAMC,WAgIlBC,E,kDA9DX,aAAc,IAAD,8BACT,gBAmCJpB,YAAc,SAACC,EAAGoB,GACd,IAAIC,EAAQ,EAAKd,MAAMJ,YAAciB,EAErC,EAAKZ,SAAS,CACVL,YAAakB,KAtCjB,EAAKC,aAAe,CAAC,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAGrB,EAAKf,MAAQ,CACTJ,YAAa,EACbF,MAAO,SA/BF,E,0CA4Cb,WAAS,IAAD,OACJ,OACI,sBAAKQ,UAAU,WAAf,UACI,qBAAIA,UAAU,qBAAd,kCAA2DG,KAAKL,MAAMJ,eACtE,qBAAKM,UAAU,0BAAf,SACMG,KAAKU,aAAaC,KAAI,SAAAT,GACpB,OACQ,cAAC,EAAD,CAA2BV,KAAO,CAACU,KAAKA,EAAMT,YAAa,EAAKE,MAAMJ,aAAcJ,YAAc,EAAKA,aAAlFe,e,GArD9BG,IAAMC,WCtDdM,MATf,WACE,OACE,sBAAKf,UAAU,OAAf,UACA,6DACA,cAAC,EAAD,QCKWgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc7f250d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ScheduleItem extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: 'white'\r\n        };\r\n    }\r\n\r\n    changeColor = e => {\r\n        var color = 'white';\r\n        var green = '#40664c';\r\n        var bikeCounter = this.props.data.currentData;\r\n        var stateColor = this.state.color;\r\n\r\n        if(stateColor === 'white'){\r\n            if (bikeCounter === 0){\r\n                color = 'red';\r\n            } else if(bikeCounter > 0){\r\n                color = green\r\n                this.props.changeColor(e, -1);\r\n            }\r\n        } else if(stateColor === green){\r\n            if (bikeCounter === 0){\r\n                color = 'white';\r\n            } else if(bikeCounter > 0 && bikeCounter < 8){\r\n                color = 'white';\r\n            }\r\n            this.props.changeColor(e, 1);\r\n        } else {\r\n            if (bikeCounter === 0){\r\n                color = 'white';\r\n            } else if(bikeCounter > 0){\r\n                color = green\r\n                this.props.changeColor(e, -1);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            color: color\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div \r\n            className=\"schedule__item\" \r\n            style = {{backgroundColor: this.state.color,\r\n                      borderColor: this.state.color\r\n            }}\r\n            >\r\n                <h2 className=\"schedule__item-title\">\r\n                    {this.props.data.hour}\r\n                </h2>\r\n                <button type=\"button\" onClick={this.changeColor}>Book</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass Schedule extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.scheduleList = ['8:00', \r\n                             '8:30', \r\n                             '9:00', \r\n                             '9:30', \r\n                             '10:00', \r\n                             '10:30', \r\n                             '11:00', \r\n                             '11:30', \r\n                             '12:00 p.m',\r\n                             '12:30 p.m',\r\n                             '1:00 p.m',\r\n                             '1:30 p.m',\r\n                             '2:00 p.m',\r\n                             '2:30 p.m',\r\n                             '3:00 p.m',\r\n                             '3:30 p.m',\r\n                             '4:00 p.m',\r\n                             '4:30 p.m',\r\n                             '5:00 p.m',\r\n                             '5:30 p.m',\r\n                             '6:00 p.m',\r\n                             '6:30 p.m',\r\n                             '7:00 p.m',\r\n                             '7:30 p.m',\r\n                             '8:00 p.m',\r\n                            ];\r\n\r\n        this.state = {\r\n            bikeCounter: 8,\r\n            color: 'white',\r\n        };\r\n\r\n    }\r\n\r\n    changeColor = (e, add) => {\r\n        var value = this.state.bikeCounter + add;\r\n\r\n        this.setState({\r\n            bikeCounter: value,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"schedule\">\r\n                <h2 className=\"schedule__bookings\">Bykes available: &nbsp;{this.state.bikeCounter}</h2>\r\n                <div className=\"schedule__itemcontainer\">\r\n                    { this.scheduleList.map(hour => {\r\n                        return(\r\n                                <ScheduleItem key = {hour} data= {{hour:hour, currentData: this.state.bikeCounter}} changeColor ={this.changeColor}></ScheduleItem>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Schedule;","import './App.css';\nimport  Schedule from'./components/Schedule';\n\nfunction App() {\n  return (\n    <div className=\"main\">\n    <h1>Amazing Motocycle Scheduler</h1>\n    <Schedule></Schedule>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}